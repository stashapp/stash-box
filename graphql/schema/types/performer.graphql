enum GenderEnum {
  MALE
  FEMALE
  TRANSGENDER_MALE
  TRANSGENDER_FEMALE
  INTERSEX
  NON_BINARY
}

enum GenderFilterEnum {
  UNKNOWN
  MALE
  FEMALE
  TRANSGENDER_MALE
  TRANSGENDER_FEMALE
  INTERSEX
  NON_BINARY
}

enum BreastTypeEnum {
  NATURAL
  FAKE
  NA
}

type Measurements {
  cup_size: String
  band_size: Int
  waist: Int
  hip: Int
}

enum EthnicityEnum {
  CAUCASIAN
  BLACK
  ASIAN
  INDIAN
  LATIN
  MIDDLE_EASTERN
  MIXED
  OTHER
}
enum EthnicityFilterEnum {
  UNKNOWN
  CAUCASIAN
  BLACK
  ASIAN
  INDIAN
  LATIN
  MIDDLE_EASTERN
  MIXED
  OTHER
}

enum EyeColorEnum {
  BLUE
  BROWN
  GREY
  GREEN
  HAZEL
  RED
}

enum HairColorEnum {
  BLOND
  BROWN
  BLACK
  RED
  AUBURN
  GREY
  BALD
  VARIOUS
  WHITE
  OTHER
}

type BodyModification {
  location: String!
  description: String
}

input BodyModificationInput {
  location: String!
  description: String
}

type Performer {
  id: ID!
  name: String!
  disambiguation: String
  aliases: [String!]!
  gender: GenderEnum
  urls: [URL!]!
  birthdate: FuzzyDate @deprecated(reason: "Please use `birth_date`")
  birth_date: String
  age: Int # resolver
  ethnicity: EthnicityEnum
  country: String
  eye_color: EyeColorEnum
  hair_color: HairColorEnum
  """Height in cm"""
  height: Int
  measurements: Measurements! @deprecated(reason: "Use individual fields, cup/band/waist/hip_size")
  cup_size: String
  band_size: Int
  waist_size: Int
  hip_size: Int
  breast_type: BreastTypeEnum
  career_start_year: Int
  career_end_year: Int
  tattoos: [BodyModification!]
  piercings: [BodyModification!]
  images: [Image!]!
  deleted: Boolean!
  edits: [Edit!]!
  scene_count: Int!
  scenes(input: PerformerScenesInput): [Scene!]!
  merged_ids: [ID!]!
  studios: [PerformerStudio!]!
  is_favorite: Boolean!
  created: Time!
  updated: Time!
}

input PerformerScenesInput {
  """Filter by another performer that also performs in the scenes"""
  performed_with: ID

  """Filter by a studio"""
  studio_id: ID

  """Filter by tags"""
  tags: MultiIDCriterionInput
}

type PerformerStudio {
  studio: Studio!
  scene_count: Int!
}

input PerformerCreateInput {
  name: String!
  disambiguation: String
  aliases: [String!]
  gender: GenderEnum
  urls: [URLInput!]
  birthdate: String
  ethnicity: EthnicityEnum
  country: String
  eye_color: EyeColorEnum
  hair_color: HairColorEnum
  height: Int
  cup_size: String
  band_size: Int
  waist_size: Int
  hip_size: Int
  breast_type: BreastTypeEnum
  career_start_year: Int
  career_end_year: Int
  tattoos: [BodyModificationInput!]
  piercings: [BodyModificationInput!]
  image_ids: [ID!]
  draft_id: ID
}

input PerformerUpdateInput {
  id: ID!
  name: String
  disambiguation: String
  aliases: [String!]
  gender: GenderEnum
  urls: [URLInput!]
  birthdate: String
  ethnicity: EthnicityEnum
  country: String
  eye_color: EyeColorEnum
  hair_color: HairColorEnum
  height: Int
  cup_size: String
  band_size: Int
  waist_size: Int
  hip_size: Int
  breast_type: BreastTypeEnum
  career_start_year: Int
  career_end_year: Int
  tattoos: [BodyModificationInput!]
  piercings: [BodyModificationInput!]
  image_ids: [ID!]
}

input PerformerDestroyInput {
  id: ID!
}

input PerformerEditDetailsInput {
  name: String
  disambiguation: String
  aliases: [String!]
  gender: GenderEnum
  urls: [URLInput!]
  birthdate: String
  ethnicity: EthnicityEnum
  country: String
  eye_color: EyeColorEnum
  hair_color: HairColorEnum
  height: Int
  cup_size: String
  band_size: Int
  waist_size: Int
  hip_size: Int
  breast_type: BreastTypeEnum
  career_start_year: Int
  career_end_year: Int
  tattoos: [BodyModificationInput!]
  piercings: [BodyModificationInput!]
  image_ids: [ID!]
  draft_id: ID
}

input PerformerEditOptionsInput {
  """Set performer alias on scenes without alias to old name if name is changed"""
  set_modify_aliases: Boolean = false
  """Set performer alias on scenes attached to merge sources to old name"""
  set_merge_aliases: Boolean = true
}

input PerformerEditInput {
  edit: EditInput!
  """Not required for destroy type"""
  details: PerformerEditDetailsInput
  """Controls aliases modification for merges and name modifications"""
  options: PerformerEditOptionsInput
}

type PerformerEdit {
  name: String
  disambiguation: String
  added_aliases: [String!]
  removed_aliases: [String!]
  gender: GenderEnum
  added_urls: [URL!]
  removed_urls: [URL!]
  birthdate: String
  ethnicity: EthnicityEnum
  country: String
  eye_color: EyeColorEnum
  hair_color: HairColorEnum
  """Height in cm"""
  height: Int
  cup_size: String
  band_size: Int
  waist_size: Int
  hip_size: Int
  breast_type: BreastTypeEnum
  career_start_year: Int
  career_end_year: Int
  added_tattoos: [BodyModification!]
  removed_tattoos: [BodyModification!]
  added_piercings: [BodyModification!]
  removed_piercings: [BodyModification!]
  added_images: [Image]
  removed_images: [Image]
  draft_id: ID

  aliases: [String!]!
  urls: [URL!]!
  images: [Image!]!
  tattoos: [BodyModification!]!
  piercings: [BodyModification!]!
}

type PerformerEditOptions {
  """Set performer alias on scenes without alias to old name if name is changed"""
  set_modify_aliases: Boolean!
  """Set performer alias on scenes attached to merge sources to old name"""
  set_merge_aliases: Boolean!
}

type QueryPerformersResultType {
  count: Int!
  performers: [Performer!]!
}

input BreastTypeCriterionInput {
  value: BreastTypeEnum
  modifier: CriterionModifier!
}

input EyeColorCriterionInput {
  value: EyeColorEnum
  modifier: CriterionModifier!
}

input HairColorCriterionInput {
  value: HairColorEnum
  modifier: CriterionModifier!
}

input BodyModificationCriterionInput {
  location: String
  description: String
  modifier: CriterionModifier!
}

enum PerformerSortEnum {
  NAME
  BIRTHDATE
  SCENE_COUNT
  CAREER_START_YEAR
  DEBUT
  LAST_SCENE
  CREATED_AT
  UPDATED_AT
}

input PerformerQueryInput {
  """Searches name and disambiguation - assumes like query unless quoted"""
  names: String

  """Searches name only - assumes like query unless quoted"""
  name: String

  """Search aliases only - assumes like query unless quoted"""
  alias: String

  disambiguation: StringCriterionInput

  gender: GenderFilterEnum

  """Filter to search urls - assumes like query unless quoted"""
  url: String

  birthdate: DateCriterionInput
  birth_year: IntCriterionInput
  age: IntCriterionInput

  ethnicity: EthnicityFilterEnum
  country: StringCriterionInput
  eye_color: EyeColorCriterionInput
  hair_color: HairColorCriterionInput
  height: IntCriterionInput

  cup_size: StringCriterionInput
  band_size: IntCriterionInput
  waist_size: IntCriterionInput
  hip_size: IntCriterionInput

  breast_type: BreastTypeCriterionInput

  career_start_year: IntCriterionInput
  career_end_year: IntCriterionInput
  tattoos: BodyModificationCriterionInput
  piercings: BodyModificationCriterionInput
  """Filter by performerfavorite status for the current user"""
  is_favorite: Boolean

  """Filter by a performer they have performed in scenes with"""
  performed_with: ID

  """Filter by a studio"""
  studio_id: ID

  page: Int! = 1
  per_page: Int! = 25
  direction: SortDirectionEnum! = DESC
  sort: PerformerSortEnum! = CREATED_AT
}

type PerformerDraft {
  id: ID
  name: String!
  disambiguation: String
  aliases: String
  gender: String
  birthdate: String
  urls: [String!]
  ethnicity: String
  country: String
  eye_color: String
  hair_color: String
  height: String
  measurements: String
  breast_type: String
  tattoos: String
  piercings: String
  career_start_year: Int
  career_end_year: Int
  image: Image
}

input PerformerDraftInput {
  id: ID
  disambiguation: String
  name: String!
  aliases: String
  gender: String
  birthdate: String
  urls: [String!]
  ethnicity: String
  country: String
  eye_color: String
  hair_color: String
  height: String
  measurements: String
  breast_type: String
  tattoos: String
  piercings: String
  career_start_year: Int
  career_end_year: Int
  image: Upload
}
